<%- include header.ejs %>
<%- include notifications.ejs %>
<!-- //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<link rel="stylesheet" type="text/css" href="/css/profile-updation.css"/>
<!-- GOOGLE MAP Address Fetching API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDRSMN76wNeDZnCMwnxYlPMjFV_YmKMIWY&libraries=places"></script>
<!-- &callback=initialize function to be called if neede-->
<body>
    <%
    var role={
        question : "Please Select Your Role",
        image_url : "https://download.unsplash.com/photo-1428279148693-1cf2163ed67d",
        type : "radio",
        id : "Role",
        options : [
            {
                name : "Fresher",
                value : "fresher"
            },
            {
                name : "Experienced",
                value : "exp"
            }
        ]
    }
    %>
    <div id="back">
        <div class="backRight"></div>
        <div class="backLeft"></div>
    </div>
    <div id="slideBox">
        <div class="topLayer">
            <div class="left">
                <div class="content">
                    <h2 id="question1"></h2>
                    <form method="post" onsubmit="return false;">
                        <div class="form-group" style="color:white;" id="input1">
                        </div>
                    </form>
                    <button id="prev1" class="goLeft off">Previous</button>
                    <button id="next1" class="goLeft">Next</button>
                    <button id="submit1" onclick="submitquestions()" style="display:none;" type="submit">Submit</button>
                </div>
            </div>
            <div class="right">
                <div class="content">
                    <h2 id="question2"></h2>
                    <form method="post" onsubmit="return false;">
                        <div class="form-group" id="input2">
                            <!-- <label for="username" class="form-label">Username</label> -->
                            <!-- <input type="text" placeholder="Username"/> -->
                        </div>
                        <button id="prev2" class="goRight off">Previous</button>
                        <button id="next2" class="goRight">Next</button>
                        <button id="submit2" onclick="submitquestions()" style="display:none;" type="submit">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
    var domstructure=[];
        userdetails=<%-JSON.stringify(data)%>,
        question1=$('#question1'),
        question2=$('#question2'),
        input1=$('#input1'),
        input2=$('#input2'),
        currentIndexlocal=0,
        answers={};
        
    $(document).ready(function(){
        updateQuestions(domstructure);
        refresh(question1,question2,input1,input2,currentIndexlocal,'right');

            $('.goRight').click(function(e){
                $(".goRight").attr('disabled','true');
                if($(".goLeft").attr('disabled')){
                    $(".goLeft").removeAttr('disabled');
                }
                if(currentIndexlocal==0){
                    submitrole();
                }else{
                    var currentInput=$((domstructure[currentIndexlocal].type=="multiselect") ? '#'+domstructure[currentIndexlocal].id : '[name="'+domstructure[currentIndexlocal].id+'"]');
                    if((e.currentTarget.id=="next2" && ValidateInputfields(currentInput)) || e.currentTarget.id!="next2"){
                        currentIndexlocal=(e.currentTarget.id=="next2" ? currentIndexlocal+1 : currentIndexlocal-1);
                        refresh(question1,question2,input1,input2,currentIndexlocal,'left'); 
                        $('#slideBox').animate({
                        'marginLeft' : '0'
                        });
                        $('.topLayer').animate({
                        'marginLeft' : '100%'
                        });
                        $(".goRight").blur();
                        autofocusNextElement(domstructure[currentIndexlocal].id);
                    }else{
                        $(".goRight").removeAttr('disabled');
                    }
                }
            });
            $('.goLeft').click(function(e){
                $(".goLeft").attr('disabled');
                if($(".goRight").attr('disabled')){
                    $(".goRight").removeAttr('disabled');
                }
                var currentInput=$((domstructure[currentIndexlocal].type=="multiselect") ? '#'+domstructure[currentIndexlocal].id : '[name="'+domstructure[currentIndexlocal].id+'"]');                
                if((e.currentTarget.id=="next1" && ValidateInputfields(currentInput)) || e.currentTarget.id!="next1"){
                    currentIndexlocal=(e.currentTarget.id=="next1" ? currentIndexlocal+1 : currentIndexlocal-1);
                    refresh(question1,question2,input1,input2,currentIndexlocal,'right');
                    $('#slideBox').animate({
                    'marginLeft' : '50%'
                    });
                    $('.topLayer').animate({
                    'marginLeft': '0'
                    });
                    $(".goLeft").blur();
                    autofocusNextElement(domstructure[currentIndexlocal].id);
                }else{
                        $(".goLeft").removeAttr('disabled');
                    }
            });
    });

    function refresh(q1,q2,i1,i2,currentIndex_selected,openside){
        var input="";
        switch(domstructure[currentIndex_selected].type){
            case "radio":
                    for(key in domstructure[currentIndex_selected].options){
                        input +="<label class='radio-container'>"+domstructure[currentIndex_selected].options[key]['name']+"\
                                    <input type='radio' "+ (((typeof answers[domstructure[currentIndex_selected].id] === "undefined") && key==0) || ((typeof answers[domstructure[currentIndex_selected].id] !== "undefined") && answers[domstructure[currentIndex_selected].id]==domstructure[currentIndex_selected].options[key]['value']) ? 'checked' : '')+" name='"+domstructure[currentIndex_selected].id +"' value='"+domstructure[currentIndex_selected].options[key]['value']+"' tabindex='-1'>\
                                    <span class='checkmark'></span>\
                                    </label>";
                    }
                break;
            case "text":
                    input="<input type='text' value='"+((typeof answers[domstructure[currentIndex_selected].id] === "undefined") ? "" : answers[domstructure[currentIndex_selected].id])+"' onfocus='"+(domstructure[currentIndex_selected].name=="geo_address" ? 'getAutoCompleteAddress(this)' : '')+"'  name='"+domstructure[currentIndex_selected].id+"' placeholder='"+((domstructure[currentIndex_selected].placeholder) ? domstructure[currentIndex_selected].placeholder : '')+"' tabindex='-1'/>";
                break;
            case "date":
                    input="<input type='date' max='"+getMaxDate()+"' value='"+((typeof answers[domstructure[currentIndex_selected].id] === "undefined") ? "" : answers[domstructure[currentIndex_selected].id])+"' name='"+ domstructure[currentIndex_selected].id +"' placeholder='"+ ((domstructure[currentIndex_selected].placeholder) ? domstructure[currentIndex_selected].placeholder : '')+"' tabindex='-1'/>";
                break;
            case "number":
                    input="<input type='number' min='0' "+(domstructure[currentIndex_selected].max ? "onkeydown='preventMaxTyping("+domstructure[currentIndex_selected].max+",this,event)'" : '')+" value='"+((typeof answers[domstructure[currentIndex_selected].id] === "undefined") ? "" : answers[domstructure[currentIndex_selected].id])+"' name='"+ domstructure[currentIndex_selected].id +"' placeholder='"+ ((domstructure[currentIndex_selected].placeholder) ? domstructure[currentIndex_selected].placeholder : '')+"' tabindex='-1'/>";
                break;
            case "textarea":
                    input="<textarea  name='"+ domstructure[currentIndex_selected].id +"' placeholder='"+ ((domstructure[currentIndex_selected].placeholder) ? domstructure[currentIndex_selected].placeholder : '')+"' tabindex='-1'>"+((typeof answers[domstructure[currentIndex_selected].id] === "undefined") ? '' : answers[domstructure[currentIndex_selected].id])+"</textarea>";
                break;
            case "multiselect":
                var options="";
                    for(key in domstructure[currentIndex_selected].options){
                        options+="<div class='item' data-value='"+domstructure[currentIndex_selected].options[key].value+"'>"+domstructure[currentIndex_selected].options[key].name+"</div>";
                    }
                    input='<div class="ui fluid multiple search selection dropdown" style="margin:80px 0px;">\
                                <input name="tags" id='+domstructure[currentIndex_selected].id+' type="hidden" value="">\
                                <i class="dropdown icon"></i>\
                                <input class="search" style="width:100%;" autocomplete="off" tabindex="0">\
                                <span class="sizer" style=""></span>\
                                <div class="default text">'+domstructure[currentIndex_selected].name+'</div>\
                                <div class="menu transition hidden" tabindex="-1">\
                                    '+options+'\
                                </div>\
                            </div>';
                break;
            case "select":
                var options="";
                for(key in domstructure[currentIndex_selected].options){
                    options+="<option value='"+domstructure[currentIndex_selected].options[key].value+"' "+(((typeof answers[domstructure[currentIndex_selected].id] === "undefined") && (key==0)) || ((typeof answers[domstructure[currentIndex_selected].id] !== "undefined") && answers[domstructure[currentIndex_selected].id]==domstructure[currentIndex_selected].options[key].value) ? 'selected' : '')+" tabindex='-1'>"+domstructure[currentIndex_selected].options[key].name+"</option>";
                }
                input="<select  name='"+domstructure[currentIndex_selected].id+"' tabindex='-1'>"+options+"</select>"
                break;
        }


        if(openside=="right"){
            $('#prev1,#next1').attr('tabindex','-1');
            $('#prev2,#next2').removeAttr('tabindex');
            $('.backLeft').css("background-image","url("+domstructure[currentIndex_selected].image_url+")");
            (currentIndex_selected==0) ? $('#prev2').hide() : $('#prev2').show();
            if((domstructure.length-1)==currentIndex_selected && currentIndex_selected!=0){
                $('#submit2').show();
                $('#next2').hide();
            }else{
                $('#submit2').hide();
                $('#next2').show();
            }
            q2.html(domstructure[currentIndex_selected].question); 
            i2.html(input);
        }
        if(openside=="left"){
            $('#prev2,#next2').attr('tabindex','-1');
            $('#prev1,#next1').removeAttr('tabindex');
            $('.backRight').css("background-image","url("+domstructure[currentIndex_selected].image_url+")");
            (currentIndex_selected==0) ? $('#prev1').hide() : $('#prev1').show();
            if((domstructure.length-1)==currentIndex_selected){
                $('#submit1').show();
                $('#next1').hide()
            }else{
                $('#submit1').hide();
                $('#next1').show();
            }
            q1.html(domstructure[currentIndex_selected].question);
            i1.html(input);
        }
        if(domstructure[currentIndex_selected].type=="multiselect"){
            $('.dropdown').on('click', function(event) {
                $('.dropdown').dropdown('toggle');
                $('.dropdown .search').focus();
                event.stopImmediatePropagation();
            });

            if(Object.keys(answers).includes(domstructure[currentIndex_selected].id)){
                var populateOptions=domstructure[currentIndex_selected].options;
                populateOptions.map((v,k)=>{  
                     delete v["selected"];
                     if(answers[domstructure[currentIndex_selected].id].includes(v.value)){
                         v["selected"]= true;
                     }
                });
                $('.dropdown').dropdown({
                    values: populateOptions
                });
            }
        }
    }


    function updateQuestions(questions){
        domstructure=[<%-JSON.stringify(role)%>];
        if(Object.keys(questions).length){
            for ( var key in questions) { 
                singleelement={};
                //mandatory fields
                singleelement.image_url=questions[key]['image_url'];
                singleelement.question=questions[key]['q'];
                singleelement.type=questions[key]['type'];
                singleelement.id=key;
                
                //optional fields
                if("placeholder" in questions[key]){
                    singleelement.placeholder=questions[key]['placeholder'];
                }
                if("max" in questions[key]){
                    singleelement.max=questions[key]['max'];
                }
                if("name" in questions[key]){
                    singleelement.name=questions[key]['name'];
                }
                if("options" in questions[key]){
                    singleelement.options=questions[key]['options'];
                }
                //////////////////////////////////////
                domstructure.push(singleelement);
            }
        }
    }


    function submitrole(){
        var selected_role=$('input[name="'+domstructure[currentIndexlocal].id+'"]:checked').val();
        $.ajax({
            type: "POST",
            url: '/profile/getQuestions',
            data: {
                    id : userdetails["_id"],
                    Role : selected_role,
                    is_submitted : false
            },
            dataType: 'json'
        }).done(function(response){
            answers["role"]=selected_role;
            updateQuestions(response.questions);
            currentIndexlocal=currentIndexlocal+1;
            refresh(question1,question2,input1,input2,(currentIndexlocal),'left'); 
            $('#slideBox').animate({
                'marginLeft' : '0'
            });
            $('.topLayer').animate({
                'marginLeft' : '100%'
            });
            $(".goRight").blur();
            autofocusNextElement(domstructure[currentIndexlocal].id);
        }).error(function(e){
            console.log(e);
            showNotification("danger","Something Went Wrong","Please Try Again Later...",1);
            if($(".goRight").attr('disabled')){
                $(".goRight").removeAttr('disabled');
            }
        });
    }




// Input Validations
    function validateMobile(number){
        var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        if(number.match(phoneno)){
            return true;
        }
        else{
            return false;
        }
    }

    function preventMaxTyping(maxlength,element,event){
        setTimeout(() => {
            if (element.value > maxlength && event.keyCode !== 46 && event.keyCode !== 8){event.preventDefault();element.value=parseInt(element.value.toString().slice(0,-1));}
        }, 100);
    }
    function ValidateInputfields(inputObject){
        var element=inputObject[0];
        var mandatory_fields=['UserName','TellAboutYourself','BasicQuestion_Objective','BasicQuestion_CurrentLocation','BasicQuestion_DOB','BasicQuestion_10thPercentage','BasicQuestion_12thPercentage','BasicQuestion_CollegeDegree','BasicQuestion_CollegePercentage','BasicQuestion_Project','BasicQuestion_Certification','BasicQuestion_Internship','BasicQuestion_Skillset','BasicQuestion_AreaOfInterest','BasicQuestion_Pros','BasicQuestion_ExtraCurricular','BasicQuestion_PhoneNumber','BasicQuestion_Linkedin','BasicQuestion_Github'];
        var error=false,
            inputname=element.name,
            inputvalue=element.value,
            errormsg="";

            if(inputvalue==""){
                error=true;
                errormsg="Field cannot be empty!";
            }else{
                if(domstructure[currentIndexlocal].type=="multiselect"){
                    inputname=domstructure[currentIndexlocal].id;
                    inputvalue=(inputvalue.includes(',') ? inputvalue.split(',') : [inputvalue]);
                }
                switch(inputname){
                    case "UserName":
                        if(inputvalue.length < 2){
                            error=true;
                            errormsg="Please Enter a Valid Username!!";
                        }
                        break;
                    case "BasicQuestion_PhoneNumber":
                        if(!validateMobile(inputvalue)){
                            error=true;
                            errormsg="Please Enter a Valid Contact Number!!";
                        }
                        break;
                    case "BasicQuestion_Github":
                        if(inputvalue.toLowerCase().indexOf('github.com') == -1){
                            error=true;
                            errormsg="Please Enter a Valid Github profile!!";
                        }
                        break;
                    case "BasicQuestion_Linkedin":
                        if(inputvalue.toLowerCase().indexOf('linkedin.com') == -1){
                            error=true;
                            errormsg="Please Enter a Valid LinkedIn profile!!";
                        }
                        break;
                    case "BasicQuestion_DOB":
                        if(new Date(inputvalue) > new Date()){
                            error=true;
                            errormsg="Please Enter a Valid Date of Birth!!";
                        }
                        break;
                    }
            }
            if(error){
                inputObject.addClass('input-error');
                showNotification("danger",errormsg,"",1);
            }
            else{
                inputObject.removeClass('input-error');
                answers[inputname]=inputvalue;
                return true;
            }
        return false;
    }
///// Yet to be completed...............
    function submitquestions(){
        var currentInput=$((domstructure[currentIndexlocal].type=="multiselect") ? '#'+domstructure[currentIndexlocal].id : '[name="'+domstructure[currentIndexlocal].id+'"]');
            if(ValidateInputfields(currentInput)){
                var details=[];
                var selected_role=answers["role"];
                    delete answers["role"];
                    Object.keys(answers).map((e,v)=>{details.push(answers[e]);});
                $.ajax({
                    type: "POST",
                    url: '/profile/getQuestions',
                    data: {
                            id : userdetails["_id"],
                            Role : selected_role,
                            question_response : JSON.stringify(details), 
                            is_submitted : true
                    },
                    dataType: 'json',
                    success : function(data){
                        if(data.redirect_url && data.redirect_url.length > 0){
                            window.location=data.redirect_url+"?uid="+data.render_data.userid+"&url="+data.render_data.url;
                        }
                    },
                    error : function(e){
                        showNotification("danger","Something Went Wrong","Please Try Again Later...",1);
                        // if(data.redirect_url && data.redirect_url.length > 0){
                        //     window.location=data.redirect_url;
                        // }
                    }
                });
            }
    }

function getMaxDate(){
    var today = new Date();
    var dd = today.getDate(),
        mm = (today.getMonth()+1), //January is 0!
        yyyy = today.getFullYear();
    if(dd<10){
            dd='0'+dd
        } 
        if(mm<10){
            mm='0'+mm
        } 

    today = yyyy+'-'+mm+'-'+dd;
    return today;
}
///// Adding focus to Next New Elements and removing focus on tab from previous elements
    function autofocusNextElement(inputIndex){
        setTimeout(function(){
            $("[name="+inputIndex+"]").focus();
            $("[name="+inputIndex+"]").removeAttr('tabindex');
            if(domstructure[currentIndexlocal-1]){
                $("[name="+domstructure[currentIndexlocal-1].id+"]").attr('tabindex','-1');
            }
            if(domstructure[currentIndexlocal+1]){
                $("[name="+domstructure[currentIndexlocal+1].id+"]").attr('tabindex','-1');
            }
        },500); 
    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  GOOGLE MAP Address Fetching API
    function getAutoCompleteAddress(input) {
        new google.maps.places.Autocomplete(input);
        google.maps.event.addDomListener(input, 'keydown', function(event) { 
            if (event.keyCode === 13) { 
                event.preventDefault(); 
            }
        }); 
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /* function to show notifications from view/notifications.ejs
    *  Param 1 : static,success,info,warning,danger  which changes theme accordingly. Note :-- static doesnt have close button
    *  Param 2 : Bold Title Text for the notification Message.
    *  Param 3 : Actual Description with small text than its title.
    *  Param 4 : 0 - Infinite OR  1,2,etc  Duration in seconds for which the notification message should exist in the page.
    */ 
    showNotification("static","Welcome "+userdetails.user_name+",","Please answer the following questions",0);
    
    $(document).ready(function(){
        $('.tag.example .ui.dropdown').dropdown({
            action : "show",
            allowAdditions: true
        });
    });

    </script>
</body>
<%- include footer.ejs %>